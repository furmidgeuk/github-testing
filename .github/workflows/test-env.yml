name: Deploy Resource Group

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment (dev, test, val, prd)"
        required: true
        type: choice
        options:
          - dev
          - test
          - val
          - prd

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: Request OIDC Token
      #   id: oidc-token
      #   run: |
      #      OIDC_TOKEN=$(curl -sSL -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
      #       "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=api://AzureADTokenExchange" | jq -r .value)
      #      echo "OIDC_TOKEN=$OIDC_TOKEN" >> $GITHUB_ENV

      # - name: Login to Azure with OIDC Token
      #   run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} --tenant ${{ secrets.AZURE_TENANT_ID }} --federated-token $OIDC_TOKEN

      - name: Set Azure Subscription ID
        run: echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Plan Terraform
        run: terraform plan -var="environment=${{ github.event.inputs.environment }}" -out=tfplan
        working-directory: terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve tfplan
        working-directory: terraform
